apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
    spec:
      containers:
        - name: {{ .Values.backend.name }}
          image: {{ .Values.backend.image.repository }}{{ if .Values.backend.image.tag }}:{{ .Values.backend.image.tag }}{{ end }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.ports.container }}
          env:
            - name: DB_HOST
              value: mysql
            - name: DB_USER
              value: root
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: DB_NAME
              value: {{ .Values.mysql.database }}
            - name: PORT
              value: "{{ .Values.backend.ports.container }}"
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: session-secret
          resources: {{ toYaml .Values.backend.resources | nindent 12 }}
          livenessProbe:
            {{- if .Values.backend.probes.liveness.enabled }}
            httpGet:
              path: {{ .Values.backend.probes.liveness.path }}
              port: {{ .Values.backend.probes.liveness.port }}
            {{- else }}
            enabled: false
            {{- end }}
          readinessProbe:
            {{- if .Values.backend.probes.readiness.enabled }}
            httpGet:
              path: {{ .Values.backend.probes.readiness.path }}
              port: {{ .Values.backend.probes.readiness.port }}
            {{- else }}
            enabled: false
            {{- end }}
