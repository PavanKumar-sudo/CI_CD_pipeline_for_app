name: CI - Build & Deploy

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'

env:
  NODE_VERSION: 18
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/backend
  DOMAIN: go-web-app.local 

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.2.2

      - uses: actions/setup-node@v3.8.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run unit tests
        working-directory: ./backend
        run: npm test

  docker:
    runs-on: ubuntu-22.04
    needs: test

    outputs:
      image_tag: ${{ steps.export_tag.outputs.image_tag }}

    steps:
      - uses: actions/checkout@v4.2.2

      - uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and tag image
        run: |
          docker build -t $DOCKER_IMAGE:latest -f backend/Dockerfile .
          docker tag $DOCKER_IMAGE:latest $DOCKER_IMAGE:${{ github.sha }}

      - name: Push Docker image
        run: |
          docker push $DOCKER_IMAGE:latest
          docker push $DOCKER_IMAGE:${{ github.sha }}

      - name: Export output for next job
        id: export_tag
        run: echo "image_tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Save image tag to file
        run: echo "${{ github.sha }}" > image-tag.txt

      - uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image-tag.txt

  generate-values:
    runs-on: ubuntu-22.04
    needs: docker
    steps:
      - uses: actions/checkout@v4

      - name: Generate values-ci.yaml for ArgoCD
        run: |
          echo "backend:" > helm-chart/values-ci.yaml
          echo "  image:" >> helm-chart/values-ci.yaml
          echo "    tag: \"${{ needs.docker.outputs.image_tag }}\"" >> helm-chart/values-ci.yaml
          echo "  sessionSecret: \"${{ secrets.SESSION_SECRET }}\"" >> helm-chart/values-ci.yaml
          echo "smtpAuth:" >> helm-chart/values-ci.yaml
          echo "  username: \"${{ secrets.SMTP_USERNAME }}\"" >> helm-chart/values-ci.yaml
          echo "  password: \"${{ secrets.SMTP_PASSWORD }}\"" >> helm-chart/values-ci.yaml
          echo "global:" >> helm-chart/values-ci.yaml
          echo "  domain: \"${{ env.DOMAIN }}\"" >> helm-chart/values-ci.yaml

      - name: Commit values-ci.yaml to Git
        run: |
          git config user.name "github-actions"
          git config user.email "ci@github.com"
          git add helm-chart/values-ci.yaml
          git commit -m "🔁 Update Helm values-ci.yaml for ArgoCD sync"
          git push

  trivy-scan:
    runs-on: ubuntu-22.04
    needs: docker
    steps:
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan image with Trivy
        run: trivy image --severity HIGH,CRITICAL $DOCKER_IMAGE:${{ needs.docker.outputs.image_tag }} > trivy-report.txt

      - name: Upload Trivy report to GitHub summary
        run: |
          echo "### Trivy Report" >> $GITHUB_STEP_SUMMARY
          cat trivy-report.txt >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: [generate-values, trivy-scan, docker]
    uses: ./.github/workflows/deploy-app.yaml
    with:
      helm_release: loginapp
      image_tag: ${{ needs.docker.outputs.image_tag }}
    secrets: inherit

  notify:
    needs: deploy
    uses: ./.github/workflows/notify-discord.yaml
    with:
      status: success
      scope: Build & Push + ArgoCD Sync
    secrets: inherit
